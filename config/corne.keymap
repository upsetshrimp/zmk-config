/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&mo 6>;
            key-positions = <11 23 35>;
        };
    };

    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            global-quick-tap;
        };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        sr: shift_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&to>;
	    retro-tap;
        };
        hl_l: homerow_layers_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_L";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        hl_r: homerow_layers_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_R";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp F15  &kp Q           &kp W               &kp E           &kp R        &kp T        &kp Y            &kp U               &kp I           &kp O     &kp P             &kp F18
&kp TAB  &kp A  &hm_l LEFT_ALT S  &hm_l LEFT_CONTROL D           &kp F        &kp G        &kp H            &kp J  &hm_r LEFT_CONTROL K  &hm_r LEFT_ALT L   &kp SQT  &hm_r LEFT_SHIFT F17
&kp LEFT_SHIFT  &kp Z           &kp X               &kp C           &kp V        &kp B        &kp N            &kp M           &kp COMMA         &kp DOT  &kp FSLH             &kp LEFT_SHIFT
                                        &kp DELETE  &key_repeat  &lt 1 SPACE    &lt 3 RET  &lt 2 BACKSPACE        &lt 4 ESCAPE
            >;
        };

        NAV {
            bindings = <
&trans        &trans        &trans     &trans     &trans  &kp LS(LG(S))    &kp K_UNDO  &kp K_PASTE  &kp K_COPY  &kp K_REDO      &trans  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT         &trans      &kp LEFT     &kp DOWN      &kp UP   &kp RIGHT  &caps_word  &trans
&trans        &trans        &trans     &trans     &trans         &trans      &kp HOME    &kp PG_DN   &kp PG_UP     &kp END      &trans  &trans
                                       &trans     &trans         &trans        &trans       &trans      &trans
            >;
        };

        NUM {
            bindings = <
&trans   &kp LBKT  &kp N7      &kp N8        &kp N9  &kp RIGHT_BRACKET    &trans     &trans     &trans    &trans        &trans  &trans
&trans   &kp SEMI  &kp N4      &kp N5        &kp N6          &kp EQUAL    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LEFT_GUI  &trans
&trans  &kp GRAVE  &kp N1      &kp N2        &kp N3           &kp BSLH    &trans     &trans     &trans    &trans        &trans  &trans
                           &kp PERIOD  &kp NUMBER_0          &kp MINUS    &trans     &trans     &trans
            >;
        };

        SYM {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND          &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE           &trans            &trans     &trans    &trans        &trans  &trans
&trans       &kp COLON     &kp DOLLAR           &kp PERCENT              &kp CARET         &kp PLUS           &trans         &kp LSHFT  &kp LCTRL  &kp LALT  &kp LEFT_GUI  &trans
&trans       &kp TILDE       &kp EXCL                &kp AT               &kp HASH         &kp PIPE    &kp LESS_THAN  &kp GREATER_THAN     &trans    &trans        &trans  &trans
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp UNDERSCORE           &trans            &trans     &trans
            >;
        };

        FUNC {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp LS(LG(S))    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6         &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3         &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans         &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        system_layer {
            bindings = <
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans   &kp B  &trans  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
